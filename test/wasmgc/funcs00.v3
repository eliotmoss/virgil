//@execute (0, 1, 2, 3, 4, 5, 6)=10; (1, 1, 2, 3, 4, 5, 6)=22; (2, 1, 2, 3, 4, 5, 6)=20

// Test a few miscellaneous type

class A {
	var x: int;
	new(x) { }
	def f(i: int) -> int { return x + i; }
	def g(i: int, j: int) -> int { return x - i; }
}

class B extends A {
	var y: int;
	new(x: int, y) super(x) { }
	def f(i: int) -> int { return x + y + i; }
	def g(i: int, j: int) -> int { return x + y - i; }
}

class C extends A {
	var z: int;
	new(x: int, z) super(x) { }
	def f(i: int) -> int { return x + z + i; }
	def g(i: int, j: int) -> int { return x - z - i + j; }
}

def apply(f: int -> int, arg: int, times: int) -> int {
	for (i < times) arg = f(arg);
	return arg;
}

def main(which: int, val1: int, val2: int, x: int, y: int, m: int, n: int) -> int {
	var a: A = if(which == 0, A.new(val1),
		      if(which == 1, B.new(val1, val2),
			 C.new(val1, val2)));
	var f = a.f;
	var g = a.g;
	return apply(f, x, y) +
	       apply(g(_, 1), m, n) +
	       a.f(3) + a.g(7, 2);
}
