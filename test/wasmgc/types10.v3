//@execute 0=true; 1=false

// Test a few miscellaneous type

enum E(x: byte) {
	E1(0), E2(4), E3(7)
}
layout L {
	+0	first: int;
	+4	second: u64;
	=12;
}
def hackLayout(r: Ref<L>) -> u64 {
	return u64.view(r.first) + r.second;
}

def apply(f: Ref<L> -> u64, r: Ref<L>) -> u64 {
	return f(r);
}

def main(args: Array<string>) -> int {
	var ab = Array<byte>.new(20);
	var r = Ref<L>.at(ab, 4);
	r.first = args[0].length;
	r.second = u64.view(args[1].length);
	var e = E.E1;
	for (ee in E) {
		if (ee.x == args.length) e = ee;
	}
	return int.view(apply(hackLayout, r)) + e.x;
}
