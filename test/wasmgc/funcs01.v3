//@execute 0=true; 1=false

// Test a few miscellaneous type

class A {
	var x: int;
	new(x) { }
	def f(i: int) -> int { return x + i; }
	def g(i: int) -> int { return x - i; }
}

class B extends A {
	var y: int;
	new(x: int, y) super(x) { }
	def f(i: int) -> int { return x + y + i; }
	def g(i: int) -> int { return x + y - i; }
}

class C extends A {
	var z: int;
	new(x: int, z) super(x) { }
	def f(i: int) -> int { return x + z + i; }
	def g(i: int) -> int { return x - z - i; }
}

def apply(f: int -> int, arg: int, times: int) -> int {
	for (i < times) arg = f(arg);
	return arg;
}

def main(args: Array<string>) -> int {
	var a: A = if(args.length > 10, A.new(args[0].length),
		      if(args.length > 5, B.new(args[1].length, args[2].length),
			 C.new(args[2].length, args[0].length)));
	var f = a.f;
	var g = a.g;
	return apply(f, args[0].length, args[1].length) +
	       apply(g, args[2].length, args[3].length) +
	       a.f(3) + a.g(7);
}
