//@execute 0=11; 1=12; 2=13; 3=14; 4=15; 5=16; 6=17; 7=18; 8=19; 9=20
type Reflector<T>() {}

def main(a: int) -> int {
	match (a) {
		0 => return reflect(0);
		1 => return reflect(0u);
		2 => return reflect(0L);
		3 => return reflect(0uL);
		4 => return reflect(0.0f);
		5 => return reflect(0.0d);
		6 => return reflect("");
		7 => return reflect(true);
		8 => return reflect(());
	}
	return 20;
}

def reflect<T>(v: T) -> int {
	if (eq<T, int>()) 	return 11;
	if (eq<T, u32>()) 	return 12;
	if (eq<T, long>())	return 13;
	if (eq<T, u64>())	return 14;
	if (eq<T, float>()) 	return 15;
	if (eq<T, double>())	return 16;
	if (eq<T, string>()) 	return 17;
	if (eq<T, bool>()) 	return 18;
	if (eq<T, void>()) 	return 19;
	return 22;
}

def eq<A, B>() -> bool {
	var a = Reflector<A>();
	return Reflector<B>.?(a);
}