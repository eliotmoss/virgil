//@execute 0=true; 1=false; 2=false; 3=false; 4=false; 5=false; 6=false; 7=false
//@heap-size=10000

// WebAssembly program values.
type Value #unboxed {
	case Ref(val: Object);
	case I31(val: u31);
	case I32(val: u32);
	case I64(val: u64);
	case F32(bits: u32);
	case F64(bits: u64);
	case V128(low: u64, high: u64);
}

class Object { }

def obj = Object.new();
def v00 = Value.Ref(obj);
def v01 = Value.I31(23);
def v02 = Value.I31(24);
def v03 = Value.I32(33);
def v04 = Value.I32(34);
def v05 = Value.I64(43);
def v06 = Value.I64(44);
def v07 = Value.F32(53);
def v08 = Value.F32(54);
def v09 = Value.F64(63);
def v10 = Value.F64(64);
def v11 = Value.V128(73, 74);
def v12 = Value.V128(75, 76);


def main(a: int) -> bool {
	def vals = [
		v00, v01, v02, v03, v04, v05, v06, v07, v08, v09, v10, v11, v12
	];
	var val = Value.Ref(obj);
	var got = vals[a];
	return val == got;
}
