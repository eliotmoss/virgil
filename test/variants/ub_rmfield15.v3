//@execute 0=23; 1=43; 2=65; 3=85; 4=0

type V<T> #unboxed {
	case A(x: int, y: T, z: int /*dead*/);
	case B(x: int/*dead*/, y: T, z: int);
}

var global = 0;

def get<T>(v: V<T>) -> T {
	if (V<T>.A.?(v)) {
		var x = V<T>.A.!(v);
		global += x.x;
		return x.y;
	}
	if (V<T>.B.?(v)) {
		var x = V<T>.B.!(v);
		global += x.z;
		return x.y;
	}
	var d: T;
	return d;
}

def A1 = V<(int, bool)>.A(11, (12, false), 13);
def A2 = V<(int, bool)>.A(21, (22, false), 23);

def B1 = V<(int, byte)>.B(31, (32, 6), 33);
def B2 = V<(int, byte)>.B(41, (42, 7), 43);

def main(a: int) -> int {
	global = 0;
	var v: int;
	match (a) {
		0 => v = get(A1).0;
		1 => v = get(A2).0;
		2 => v = get(B1).0;
		3 => v = get(B2).0;
	}
	return v + global;
}
