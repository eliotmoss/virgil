//@execute 0=1; 1=2; 2=4; 3=8; 4=16; 5=32; 6=64; 7=128
//@heap-size=10000

// WebAssembly program values.
type Value #unboxed {
	case Ref(val: Object);
	case I31(val: u31);
	case I32(val: u32);
	case I64(val: u64);
	case F32(bits: u32);
	case F64(bits: u64);
	case V128(low: u64, high: u64);
}

class Object { }

def vals = [
	Value.Ref(Object.new()),
	Value.I31(23), Value.I31(24),
	Value.I32(33), Value.I32(34),
	Value.I64(43), Value.I64(44),
	Value.F32(53), Value.F32(54),
	Value.F64(63), Value.F64(64),
	Value.V128(73, 74), Value.V128(75, 76)
];

def main(a: int) -> int {
	return cmp(vals[a], vals);
}

def cmp(a: Value, vals: Array<Value>) -> int {
	var result = 0;
	for (i < vals.length) {
		if (a == vals[i]) result |= 1 << u5.!(i);
	}
	return result;
}
